/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vistas;

import java.util.ArrayList;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import modelo.Agenda;
import modelo.Empresa;
import modelo.Fecha;
import modelo.Usuario;

/**
 *
 * @author Mario
 */
public class pnInsertarEventAdmin extends javax.swing.JPanel {

    Empresa miEmpresa;
    Usuario validado;
    DefaultComboBoxModel modelo;//del comboBox
    Fecha f;

    /**
     * Creates new form pnInsertarEventAdmin
     */
    public pnInsertarEventAdmin(Empresa miEmpresa, Usuario validado) {
        initComponents();
        this.miEmpresa = miEmpresa;
        this.validado = validado;
        modelo = new DefaultComboBoxModel();
        cmbEmpleados.setModel(modelo);
        f = new Fecha();
        cargarDestinatarios();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cmbEmpleados = new javax.swing.JComboBox<String>();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        txtNomEvento = new javax.swing.JTextField();
        txtFecha = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        taDescripcion = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtHora = new javax.swing.JTextField();
        btnAceptar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();

        jLabel2.setText("EMPLEADOS");

        jLabel1.setText("EVENTOS NUEVOS");

        taDescripcion.setColumns(20);
        taDescripcion.setRows(5);
        jScrollPane1.setViewportView(taDescripcion);

        jLabel3.setText("NOMBRE EVENTO");

        jLabel4.setText("FECHA");

        jLabel5.setText("DESCRIPCIÓN");

        jLabel6.setText("HORA");

        btnAceptar.setText("ACEPTAR");
        btnAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAceptarActionPerformed(evt);
            }
        });

        btnCancelar.setText("CANCELAR");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(66, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(152, 152, 152))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel6))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(txtFecha, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtNomEvento, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtHora, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(48, 48, 48)
                                .addComponent(cmbEmpleados, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(27, 27, 27)
                                .addComponent(btnAceptar, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnCancelar)))
                        .addGap(58, 58, 58))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbEmpleados, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNomEvento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtHora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnCancelar)
                    .addComponent(btnAceptar))
                .addContainerGap(21, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
    private void cargarDestinatarios() {//me carga todos los usuarios en el comboBox
        /*Lista de arrays que son de tipo Usuario(<Usuario>) y lo llamamos "users"*/
        ArrayList<Usuario> users = miEmpresa.getUsuarios();
        for (int i = 0; i < users.size(); i++) {
            modelo.addElement(users.get(i));
        }
    }
    private void btnAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAceptarActionPerformed
        int dia, mes, anno;
        int resultado = 0;
        Fecha fechaIntroducida = new Fecha();
        Usuario destinatario;
        destinatario = (Usuario) cmbEmpleados.getSelectedItem();

        String hora = txtHora.getText();
        String delimitacionesHora = ":";
        /*por cada ":" te lo guarda como un string.
         el array tendrá tanta longitud como veces esté separada por ":"*/
        String[] separadas = hora.split(delimitacionesHora);
        String fecha = txtFecha.getText();
        String delimitacionesFecha = "/";
        String[] separadas2 = fecha.split(delimitacionesFecha);

            if (separadas.length > 2 || separadas.length < 2 || (Integer.parseInt(separadas[0]) > 23 || Integer.parseInt(separadas[1]) > 59)) {//para comprobar que la hora este bien escrita
                JOptionPane.showMessageDialog(this, "FORMATO DE HORA ERRONEO");
                txtHora.setText("");
            }

        try {
            dia = Integer.parseInt(separadas2[0]);//asi paso de String a un Integer
            mes = Integer.parseInt(separadas2[1]);
            anno = Integer.parseInt(separadas2[2]);

            if (separadas2.length == 1) {
                JOptionPane.showMessageDialog(this, "FORMATO DE FECHA ERRONEO");
                txtFecha.setText("");
            } else {
                if (mes == 2 && dia > 28) {
                    JOptionPane.showMessageDialog(this, "FEBRERO SOLO TIENE 28 DÍAS");
                    txtFecha.setText("");
                } else if ((mes == 1 || mes == 3 || mes == 5 || mes == 7 || mes == 8 || mes == 10 || mes == 12) && dia > 31) {
                    JOptionPane.showMessageDialog(this, "NO PUEDEN TENER MÁS DE 31 DÍAS");
                    txtFecha.setText("");
                } else if ((mes == 4 || mes == 6 || mes == 9 || mes == 11) && dia > 30) {
                    JOptionPane.showMessageDialog(this, "NO PUEDEN TENER MÁS DE 30 DÍAS");
                    txtFecha.setText("");
                } else {
                    fechaIntroducida.setDia(dia);
                    fechaIntroducida.setMes(mes);
                    fechaIntroducida.setAnno(anno);
                    resultado = fechaIntroducida.compararFechas(f);
                    /*if (resultado == -1) {
                     JOptionPane.showMessageDialog(this, "FECHA INTRODUCIDA ES MENOR QUE LA ACTUAL");
                     txtFecha.setText("");
                     }*/
                }
            }
        } catch (ArrayIndexOutOfBoundsException e) {
            JOptionPane.showMessageDialog(this, "FORMATO DE FECHA ERRONEO");
            txtFecha.setText("");
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(this, "FORMATO DE FECHA ERRONEO");
            txtFecha.setText("");
        }

        /*if (separadas.length == 1) {
         JOptionPane.showMessageDialog(this, "FORMATO DE HORA ERRONEO");
         txtHora.setText("");
         }*/
        if (txtNomEvento.getText().compareToIgnoreCase("") == 0 || txtFecha.getText().compareToIgnoreCase("") == 0
                || txtHora.getText().compareToIgnoreCase("") == 0 || taDescripcion.getText().compareToIgnoreCase("") == 0
                || separadas.length == 1 || separadas2.length == 1 || resultado == -1) {
            JOptionPane.showMessageDialog(this, "HAY CAMPOS VACIOS o ESTÁN MAL ESCRITOS");
        } else {
            if (validado.buscarFechaEvento(hora, fecha)) {
                JOptionPane.showMessageDialog(this, "TIENES OTRO EVENTO A ESA HORA");
                txtHora.setText("");
            } else {
                envio(destinatario);
                JOptionPane.showMessageDialog(this, "EVENTO ENVIADO");
            }
        }
    }//GEN-LAST:event_btnAceptarActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        limpiar();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void envio(Usuario destinatario) {
        int tipo;
        tipo = validado.getTipo();
        Agenda a = new Agenda(txtNomEvento.getText(), txtFecha.getText(), txtHora.getText(), taDescripcion.getText(), tipo);
        destinatario.getbEntrada().add(a);// así se envia el avento al destinatario*/
        limpiar();
    }

    private void limpiar() {
        txtNomEvento.setText("");
        txtFecha.setText("");
        txtHora.setText("");
        taDescripcion.setText("");
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAceptar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JComboBox<String> cmbEmpleados;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea taDescripcion;
    private javax.swing.JTextField txtFecha;
    private javax.swing.JTextField txtHora;
    private javax.swing.JTextField txtNomEvento;
    // End of variables declaration//GEN-END:variables
}
