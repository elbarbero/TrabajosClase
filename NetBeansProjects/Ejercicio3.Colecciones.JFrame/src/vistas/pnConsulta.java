/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vistas;

import java.util.ArrayList;
import java.util.Vector;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import modelo.Cliente;
import modelo.Empresa;
import modelo.Sala;
import modelo.miModelo;

/**
 *
 * @author Mario-Portatil
 */
public class pnConsulta extends javax.swing.JPanel {
    
    Empresa miEmpresa;
    DefaultComboBoxModel modCliente;
    miModelo modSalas;

    /**
     * Creates new form pnConsulta
     */
    public pnConsulta(Empresa miEmpresa) {
        initComponents();
        this.miEmpresa = miEmpresa; //así recogemos la informacion
                /*si hacemos un"new" no regemos los datos que tiene la
         empresa sino que creamos una nueva con datos nuevos*/
        
        modCliente = new DefaultComboBoxModel();
        cmbClientes.setModel(modCliente);
        String[] titulos = {"Código", "Nombre", "Capacidad"};
        modSalas = new miModelo();
        modSalas.setColumnIdentifiers(titulos);
        tblClientes.setModel(modSalas);
        cargarClientes();
    }
    
    private void cargarClientes() {
        ArrayList<Cliente> misClientes = miEmpresa.getClientes();
        for (int i = 0; i < misClientes.size(); i++) {
            if (!misClientes.get(i).getAlquiladas().isEmpty()) {// si es cero, si está vacio (isEmpty)
                modCliente.addElement(misClientes.get(i));
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel5 = new javax.swing.JLabel();
        cmbClientes = new javax.swing.JComboBox<String>();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblClientes = new javax.swing.JTable();

        jLabel5.setFont(new java.awt.Font("Perpetua Titling MT", 1, 13)); // NOI18N
        jLabel5.setText("CONSULTA DE ALQUILERES");

        cmbClientes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbClientesActionPerformed(evt);
            }
        });

        jLabel1.setText("CLIENTES");

        tblClientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblClientes);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(164, 164, 164)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(35, 35, 35)
                                .addComponent(cmbClientes, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 628, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(25, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cmbClientes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void cmbClientesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbClientesActionPerformed
        if (cmbClientes.getSelectedIndex() != -1) {
            /*si es "-1" quiere decir que el cmbCliente está vacio y,
             si es distinto es que hay aunque sea un solo elemento(un cliente)*/
            borrarModelo();
            Cliente c = (Cliente) modCliente.getElementAt(cmbClientes.getSelectedIndex());
            ArrayList<Sala> misSalas = c.getAlquiladas();
            for (int i = 0; i < misSalas.size(); i++) {
                Vector v = new Vector();//hemos utilizado un vector donde cada elemento puede ser de un tipo diferente
                v.add(misSalas.get(i).getCodigo());
                v.add(misSalas.get(i).getNombre());
                v.add(misSalas.get(i).getCapacidad());
                modSalas.addRow(v);//aqui ya añadimos todo al modelo salas
            }
        } else {
            JOptionPane.showMessageDialog(this, "No hay clientes con salas alquiladas");
        }
    }//GEN-LAST:event_cmbClientesActionPerformed
    
    private void borrarModelo() {
        int nFilas = tblClientes.getRowCount();
        for (int i = 0; i < nFilas; i++) {
            modSalas.removeRow(0);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cmbClientes;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblClientes;
    // End of variables declaration//GEN-END:variables
}
