/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vistas;

import controlador.Conexion;
import controlador.GestorTablaAlumno;
import controlador.GestorTablaCurso;
import java.util.ArrayList;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import modelo.Alumno;
import modelo.Curso;

/**
 *
 * @author Mario
 */
public class PnAltaAlumno extends javax.swing.JPanel {

    Conexion bd;
    DefaultComboBoxModel modelo;
    Curso miCurso;
    String codCurso;
    int nPlazasCursoTotales;

    /**
     * Creates new form PnAltaAlumno
     */
    public PnAltaAlumno() {
        initComponents();
        bd = new Conexion();
        modelo = new DefaultComboBoxModel();
        cmbCursos.setModel(modelo);
        int resultado = bd.establecer("jdbc:mysql://localhost:3306/programacion");// lo último es el nombre de la base de datos
        if (resultado != 0) {
            JOptionPane.showMessageDialog(this, "CONEXIÓN INCORRECTA");
            System.exit(0);
        }
        cargarCursos();
        generarId();
    }

    private void cargarCursos() {
        GestorTablaCurso c = new GestorTablaCurso(bd);
        ArrayList<Curso> cursos;
        //lo hago así por un comboBox no es compatible con la clase GestorTablaCursos
        cursos = c.consultaTodosCursos();
        for (int i = 0; i < cursos.size(); i++) {
            modelo.addElement(cursos.get(i));
        }
        modelo.insertElementAt("------", 0);
        cmbCursos.setSelectedIndex(0);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtDni = new javax.swing.JTextField();
        txtNombre = new javax.swing.JTextField();
        txtDireccion = new javax.swing.JTextField();
        txtPoblacion = new javax.swing.JTextField();
        txtTelefono = new javax.swing.JTextField();
        txtGastos = new javax.swing.JTextField();
        btnGrabar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        txtIdAlumno = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        cmbCursos = new javax.swing.JComboBox<>();

        jLabel1.setText("ALTA DE ALUMNOS");

        jLabel2.setText("DNI");

        jLabel3.setText("NOMBRE");

        jLabel5.setText("DIRECCIÓN");

        jLabel6.setText("POBLACIÓN");

        jLabel7.setText("TELÉFONO");

        jLabel8.setText("IMPORTE/GASTOS");

        btnGrabar.setText("GRABAR");
        btnGrabar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGrabarActionPerformed(evt);
            }
        });

        btnCancelar.setText("CANCELAR");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        jLabel9.setText("ID ALUMNO");

        txtIdAlumno.setEditable(false);

        jLabel4.setText("CÓDIGO CURSO");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(134, 134, 134)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel8)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel6)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel3)
                                            .addComponent(jLabel5)
                                            .addComponent(jLabel2)
                                            .addComponent(jLabel9))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtDireccion, javax.swing.GroupLayout.DEFAULT_SIZE, 161, Short.MAX_VALUE)
                                    .addComponent(txtGastos)
                                    .addComponent(txtTelefono)
                                    .addComponent(txtPoblacion)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(txtDni, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 161, Short.MAX_VALUE)
                                        .addComponent(txtIdAlumno, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(txtNombre))
                                    .addComponent(cmbCursos, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addComponent(btnGrabar)
                        .addGap(63, 63, 63)
                        .addComponent(btnCancelar)))
                .addContainerGap(79, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(txtIdAlumno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtDni, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(cmbCursos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPoblacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txtGastos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnGrabar)
                    .addComponent(btnCancelar))
                .addGap(40, 40, 40))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnGrabarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGrabarActionPerformed
        String nombre, dni, codigoCurso, direccion, poblacion;
        int telefono = 0, codAlumno, nPlazasOcu=0, nPlazasLibres=0;
        double importeGastos = 0;
        GestorTablaCurso c = new GestorTablaCurso(bd);

        GestorTablaAlumno tabla = new GestorTablaAlumno(bd);
        comboBoxCurso();//PARA QUE ME DE EL ID DEL CURSO SELECCIONADO
        codAlumno = Integer.parseInt(txtIdAlumno.getText());
        if (codCurso.compareToIgnoreCase("0")!=0){
        nPlazasOcu = c.AlumnosPorCurso(codCurso);
        nPlazasLibres = nPlazasCursoTotales - nPlazasOcu;// ME DEVUELVE LAS PLAZAS LIBRES QUE TIENE EL CURSO
        }
        if (nPlazasLibres == 0 && codCurso.compareToIgnoreCase("0")!=0) {
            JOptionPane.showMessageDialog(this, "NO QUEDAN PLAZAS PARA ESTE CURSO");
        } else {
            if (tabla.existeAlumno(codAlumno)) {
                JOptionPane.showMessageDialog(this, "EL ALUMNO YA EXISTE");
                txtIdAlumno.setText("");
                txtIdAlumno.requestFocus();
            } else {
                nombre = txtNombre.getText();
                dni = txtDni.getText();
                codigoCurso = codCurso;
                direccion = txtDireccion.getText();
                poblacion = txtPoblacion.getText();
                try {
                    telefono = Integer.parseInt(txtTelefono.getText());
                    importeGastos = Double.parseDouble(txtGastos.getText());
                } catch (NumberFormatException e) {
                    JOptionPane.showMessageDialog(this, "NO ES UN NÚMERO");
                }

                if (nombre.length() == 0 || nombre.length() == 0 || nombre.length() == 0 || nombre.length() == 0
                        || nombre.length() == 0 || txtTelefono.getText().compareToIgnoreCase("") == 0
                        || txtGastos.getText().compareToIgnoreCase("") == 0) {
                    JOptionPane.showMessageDialog(this, "FALTAN CAMPOS POR RELLENAR");
                } else {

                    if (tabla.grabarAlumno(codAlumno, nombre, dni, codigoCurso, direccion, poblacion, telefono, importeGastos) == 1) {
                        /*le decimos si es igual a 1 porque solo añadimos un registro cada vez por lo
                que siempre nos devolvera 1 si la grabación es correcta*/
                        JOptionPane.showMessageDialog(this, "REGISTRO AÑADIDO");
                        limpiar();
                        modelo.removeAllElements();
                        cargarCursos();
                        generarId();
                    } else {
                        JOptionPane.showMessageDialog(this, "SE HA PRODUCIDO ALGÚN ERROR");
                    }
                }
            }
        }

    }//GEN-LAST:event_btnGrabarActionPerformed

    public void comboBoxCurso() {
        if (cmbCursos.getSelectedIndex() == 0) {
            codCurso = Integer.toString(0);
        } else {
            miCurso = (Curso) modelo.getSelectedItem();
            codCurso = miCurso.getCodCurso();
            nPlazasCursoTotales = miCurso.getnPlazasDisp();// ME DA LAS PLAZAS TOTALES QUE TIENE EL CURSO
        }
    }

    private void generarId() {
        GestorTablaAlumno a = new GestorTablaAlumno(bd);
        ArrayList<Alumno> alumnos;
        alumnos = a.consultaTodosAlumnos();
        int n = 0;
        if (alumnos.size() == 0) {//sino hay ningún alumno empieza en 1
            n = 1;
        } else if (alumnos.size() != 0) {
            n = alumnos.size() + 1;
//pongo "+1" porque alumnos.size empieza a contar en 0 y el primer id tiene k ser 1
        }
        txtIdAlumno.setText(Integer.toString(n));
    }

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        limpiar();
    }//GEN-LAST:event_btnCancelarActionPerformed

    public void limpiar() {
        txtIdAlumno.setText("");
        txtDni.setText("");
        txtNombre.setText("");
        txtDireccion.setText("");
        txtPoblacion.setText("");
        txtTelefono.setText("");
        txtGastos.setText("");
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnGrabar;
    private javax.swing.JComboBox<String> cmbCursos;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField txtDireccion;
    private javax.swing.JTextField txtDni;
    private javax.swing.JTextField txtGastos;
    private javax.swing.JTextField txtIdAlumno;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtPoblacion;
    private javax.swing.JTextField txtTelefono;
    // End of variables declaration//GEN-END:variables
}
