/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ventanaCursos;

import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import modelo.Academia;
import modelo.Categoria;
import modelo.Curso;

/**
 *
 * @author Admin
 */
public class Ventana extends javax.swing.JFrame {

    DefaultComboBoxModel modelo;                                                    //1 CREAR EL OBJETO MODELO DE CLASE COMBO BOX
    Academia miAcademia;                                                            //1A CREA LA ACADEMIA
    DefaultListModel modelo1;                                                       //3º CREAMOS EL OBJETO DEFAULT DE JLIST CURSOS OFERTADOS
    DefaultListModel modelo2;
    DefaultListModel modelo3;
    DefaultListModel modelo4;

    /**
     * Creates new form Ventana
     */
    public Ventana() {
        initComponents();
        Categoria[] c = crearAcademia();
        miAcademia = new Academia(c);
        modelo = new DefaultComboBoxModel();
        modelo1 = new DefaultListModel();
        modelo2 = new DefaultListModel();
        modelo3 = new DefaultListModel();
        modelo4 = new DefaultListModel();

        cmbCategoria.setModel(modelo);

        lstCursosOfertados.setModel(modelo1);
        lstPreciosOfertados.setModel(modelo2);
        lstCursosSeleccionados.setModel(modelo3);
        lstPreciosSeleccionados.setModel(modelo4);
        crearComboCat();

//        for (int pos = 0; pos<c.length;pos++){
//            Curso[] cursos = miAcademia.getUnaCategorias(pos).getCursos();
//            for (int i = 0; i < cursos.length; i++) {
//                String nombres1 = (String) modelo1.getElementAt(cursos[i]);
//                if((modelo3.indexOf(cursos[i])))==((modelo1.indexOf(cursos[i]))){
//                    modelo1.removeElement(cursos[i]);
//                    modelo2.removeElement(cursos[i].getPrecio());
//                }
//            }
//        }
    }

    private void crearComboCat() {
        Categoria[] datos = miAcademia.getCategorias();
        for (int i = 0; i < datos.length; i++) {
            modelo.addElement(datos[i].getDenominacion());
        }
    }

    private Categoria[] crearAcademia() {

        Categoria[] c = new Categoria[3];

        Curso[] curso1 = {new Curso("Java", 23), new Curso("Visual", 12)};
        Curso[] curso2 = {new Curso("HTML", 20), new Curso("CSS", 10)};
        Curso[] curso3 = {new Curso("Photoshop", 30), new Curso("Paint", 10)};

        c[0] = new Categoria("Programacion", curso1);
        c[1] = new Categoria("Web", curso2);
        c[2] = new Categoria("Diseño", curso3);

        return c;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cmbCategoria = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        cmbMedioPago = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        lstCursosOfertados = new javax.swing.JList();
        jScrollPane2 = new javax.swing.JScrollPane();
        lstPreciosOfertados = new javax.swing.JList();
        jScrollPane3 = new javax.swing.JScrollPane();
        lstPreciosSeleccionados = new javax.swing.JList();
        jScrollPane4 = new javax.swing.JScrollPane();
        lstCursosSeleccionados = new javax.swing.JList();
        btnAgregar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtTotal = new javax.swing.JTextField();
        btnCalcular = new javax.swing.JButton();
        btnLimpiar = new javax.swing.JButton();
        btnCerrar = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtIncremento = new javax.swing.JTextField();
        txtDescuento = new javax.swing.JTextField();
        txtTotalPagar = new javax.swing.JTextField();
        txtAlumno = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);

        cmbCategoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbCategoriaActionPerformed(evt);
            }
        });

        jLabel1.setText("CATEGORIA:");

        cmbMedioPago.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Contado", "Tarjeta de Credito" }));
        cmbMedioPago.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbMedioPagoActionPerformed(evt);
            }
        });

        jLabel2.setText("MEDIO DE PAGO:");

        lstCursosOfertados.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lstCursosOfertadosValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(lstCursosOfertados);

        lstPreciosOfertados.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lstPreciosOfertadosValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(lstPreciosOfertados);

        lstPreciosSeleccionados.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lstPreciosSeleccionadosValueChanged(evt);
            }
        });
        jScrollPane3.setViewportView(lstPreciosSeleccionados);

        lstCursosSeleccionados.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lstCursosSeleccionadosValueChanged(evt);
            }
        });
        jScrollPane4.setViewportView(lstCursosSeleccionados);

        btnAgregar.setText(">>");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        btnEliminar.setText("<<");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        jLabel3.setText("CURSOS OFERTADOS:");

        jLabel4.setText("CURSOS SELECCIONADOS:");

        jLabel5.setText("TOTAL:");

        txtTotal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTotalActionPerformed(evt);
            }
        });

        btnCalcular.setText("CALCULAR");
        btnCalcular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCalcularActionPerformed(evt);
            }
        });

        btnLimpiar.setText("LIMPIAR");
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });

        btnCerrar.setText("CERRAR");
        btnCerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCerrarActionPerformed(evt);
            }
        });

        jLabel6.setText("INCREMENTO:");

        jLabel7.setText("DESCUENTO:");

        jLabel8.setText("TOTAL A PAGAR:");

        jLabel9.setText("ALUMNO:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(107, 107, 107)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addGap(18, 18, 18)
                                .addComponent(txtAlumno))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(50, 50, 50)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(btnEliminar, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(btnAgregar, javax.swing.GroupLayout.Alignment.TRAILING))
                                        .addGap(45, 45, 45))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addGap(49, 49, 49)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel5))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(txtTotal)
                                            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 56, Short.MAX_VALUE)))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(69, 69, 69)
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addComponent(cmbMedioPago, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(189, 189, 189)
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(cmbCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtIncremento, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(19, 19, 19)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtDescuento, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel8)
                        .addGap(18, 18, 18)
                        .addComponent(txtTotalPagar, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(209, 209, 209)
                        .addComponent(btnCalcular)
                        .addGap(18, 18, 18)
                        .addComponent(btnLimpiar)
                        .addGap(18, 18, 18)
                        .addComponent(btnCerrar))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 646, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(41, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(txtAlumno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnAgregar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnEliminar)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.DEFAULT_SIZE, 16, Short.MAX_VALUE)
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbMedioPago, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8)
                    .addComponent(txtIncremento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDescuento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTotalPagar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCalcular)
                    .addComponent(btnLimpiar)
                    .addComponent(btnCerrar))
                .addGap(31, 31, 31))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cmbCategoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbCategoriaActionPerformed
        modelo1.removeAllElements();
        modelo2.removeAllElements();
        String nombre = (String) cmbCategoria.getSelectedItem();
        int pos = miAcademia.busquedaCategoria(nombre);

        Curso[] cursos = miAcademia.getUnaCategorias(pos).getCursos();

        //ELIMINA DEL MODELO 1 LO QUE ESTA EN EL MODELO3
        for (int i = 0; i < cursos.length; i++) {
            int p = modelo3.indexOf(cursos[i]);
            if (p == -1) {
                modelo1.addElement(cursos[i]);
                modelo2.addElement(cursos[i].getPrecio());
            }

        }
        //pos = modelo3.indexof(nombre) //Si hacemos indexof sobre un objeto puede generar conflictos.
        


    }//GEN-LAST:event_cmbCategoriaActionPerformed

    private void cmbMedioPagoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbMedioPagoActionPerformed
        calculo();
    }//GEN-LAST:event_cmbMedioPagoActionPerformed

    private void txtTotalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTotalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTotalActionPerformed

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        Curso c;                                                            //25º DECLARA EL OBJETO CURSO
        float importe;                                                      //26º DECLARA IMPORTE
        int indice = lstCursosOfertados.getSelectedIndex();                 //31º CREA UNA VARIABLE INDICE CON EL VALOR DE LA SELECCION DE LST CURSOS OFERTADOS
        if (indice == -1) {                                                 //32º SI NO HAY NINGUN CURSO SELECCIONADO
            JOptionPane.showMessageDialog(this, "SELECCIONA UN CURSO");     //33º CONTROLA EL ERROR Y SACA UN MENSAJE SELECIONA CURSO
        } else {                                                            //34º SINO ...
            c = (Curso) lstCursosOfertados.getSelectedValue();              //27º CUROS = A EL VALOR QUE TIENE STRING DE CURSOS OFERTADOS
            importe = (Float) lstPreciosOfertados.getSelectedValue();       //28º IMPORTE = A EL VAOR QUE TIENE PRECIOS OFERTADOS
            modelo3.addElement(c);                                          //29º AÑADE AL MODELO 3 EL OBJETO C QUE CON EL TOSTRING AÑADE LA DENOMINACION
            modelo4.addElement(importe);                                    //30º AÑADE AL MODELO 4 EL IMPORTE DEL CURSO 
            modelo1.remove(indice);                                         //35º ELEMINA DEL MODELO1 LA POSICION DE LOS CURSOS
            modelo2.remove(indice);                                         //36º ELIMINA DEL MODELO2 LA POSICION DE LOS PRECIOS

            calculoImporte();                                               //37º LLAMA AL METODO PARA CALCULAR LOS PRECIOS QUE ESTAN EN EL MODELO4
            calculo();
        }
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void lstCursosOfertadosValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lstCursosOfertadosValueChanged
        int indice;                                                         //CREA UN VALOR INDICE
        indice = lstCursosOfertados.getSelectedIndex();                 //INDICE = A LA SELECCION DE LISTADO DE CURSOS
        lstPreciosOfertados.setSelectedIndex(indice);
    }//GEN-LAST:event_lstCursosOfertadosValueChanged

    private void lstPreciosOfertadosValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lstPreciosOfertadosValueChanged
        int indice;                                                         //CREA UN VALOR INDICE
        indice = lstPreciosOfertados.getSelectedIndex();                //INDICE = A LA SELECCION DE LISTADO DE PRECIOS
        lstCursosOfertados.setSelectedIndex(indice);
    }//GEN-LAST:event_lstPreciosOfertadosValueChanged

    private void lstCursosSeleccionadosValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lstCursosSeleccionadosValueChanged
        int indice;                                                         //CREA UN VALOR INDICE
        indice = lstCursosSeleccionados.getSelectedIndex();                 //INDICE = A LA SELECCION DE LISTADO DE CURSOS
        lstPreciosSeleccionados.setSelectedIndex(indice);
    }//GEN-LAST:event_lstCursosSeleccionadosValueChanged

    private void lstPreciosSeleccionadosValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lstPreciosSeleccionadosValueChanged
        int indice;                                                         //CREA UN VALOR INDICE
        indice = lstPreciosSeleccionados.getSelectedIndex();                //INDICE = A LA SELECCION DE LISTADO DE PRECIOS
        lstCursosSeleccionados.setSelectedIndex(indice);
    }//GEN-LAST:event_lstPreciosSeleccionadosValueChanged

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        Curso c;                                                            //xx25º DECLARA EL OBJETO CURSO
        float importe;                                                      //xx26º DECLARA IMPORTE
        int indice = lstCursosSeleccionados.getSelectedIndex();             //xx31º CREA UNA VARIABLE INDICE CON EL VALOR DE LA SELECCION DE LST CURSOS OFERTADOS
        if (indice == -1) {                                                 //xx32º SI NO HAY NINGUN CURSO SELECCIONADO
            JOptionPane.showMessageDialog(this, "SELECCIONA UN CURSO");     //xx33º CONTROLA EL ERROR Y SACA UN MENSAJE SELECIONA CURSO
        } else {                                                            //xx34º SINO ...
            c = (Curso) lstCursosSeleccionados.getSelectedValue();          //xx27º CUROS = A EL VALOR QUE TIENE STRING DE CURSOS OFERTADOS
            importe = (Float) lstPreciosSeleccionados.getSelectedValue();   //xx28º IMPORTE = A EL VAOR QUE TIENE PRECIOS OFERTADOS
            modelo1.addElement(c);                                          //xx29º AÑADE AL MODELO 3 EL OBJETO C QUE CON EL TOSTRING AÑADE LA DENOMINACION
            modelo2.addElement(importe);                                    //xx30º AÑADE AL MODELO 4 EL IMPORTE DEL CURSO 
            modelo3.remove(indice);                                         //xx35º ELEMINA DEL MODELO1 LA POSICION DE LOS CURSOS
            modelo4.remove(indice);                                         //xx36º ELIMINA DEL MODELO2 LA POSICION DE LOS PRECIOS
            cmbCategoriaActionPerformed(evt);
            calculoImporte();                                               //xx37º LLAMA AL METODO PARA CALCULAR LOS PRECIOS QUE ESTAN EN EL MODELO4
            calculo();

        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        txtAlumno.setText("");                                              //BORRA LOS CAMPOS DEL CAMPO TXTALUMNO
        modelo1.clear();                                                    //BORRA LOS CAMPOS DEL MODELO1
        modelo2.clear();                                                    //BORRA LOS CAMPOS DEL MODELO2
        modelo3.clear();                                                    //BORRA LOS CAMPOS DEL MODELO3
        modelo4.clear();                                                    //BORRA LOS CAMPOS DEL MODELO4
        txtTotal.setText("");                                               //BORRA LOS CAMPOS DEL TXTTOTAL
        txtIncremento.setText("");                                          //BORRA LOS CAMPOS DEL TXTINCREMENTO
        txtDescuento.setText("");                                           //BORRA LOS CAMPOS DEL TXTDESCUENTO
        txtTotalPagar.setText("");                                          //BORRA LOS CAMPOS DEL TOTALPAGAR
    }//GEN-LAST:event_btnLimpiarActionPerformed

    private void btnCalcularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCalcularActionPerformed
        calculo();
    }//GEN-LAST:event_btnCalcularActionPerformed

    private void calculo() {
        float descuento, incremento, total, totalPagar;
        try {
            total = Float.parseFloat(txtTotal.getText());                    //TOTAL = CAST FLOAT DE EL STRING TXTTOTAL
            String nombre = (String) cmbMedioPago.getSelectedItem();

            if (nombre.equalsIgnoreCase("Contado")) {                                     //SI RADIO BOTON DE CONTADO ES SELECCIONADO
                incremento = 0;                                               //INCREMENTO 0
                descuento = 0.05f * total;                                      //DESCUENTO = 5% DEL TOTAL
            } else {                                                          //SI RADIO BOTON DE CONTADO ESTA DESELECCIONADO
                incremento = 0.1f * total;                                     //INCREMENTO = 10% DEL TOTAL
                descuento = 0;                                                //DESCUENTO 0
            }
            totalPagar = total + incremento - descuento;                          //TOTAL A PAGAR
            txtTotalPagar.setText(String.valueOf(totalPagar));              //ESCRIBE EL VALOR DE TOTAL A PAGAR EN TXTTOTALPAGAR
            txtDescuento.setText(String.valueOf(descuento));                //ESCRIBE EL VALOR DE DESCUENTO A PAGAR EN DESCUENTO
            txtIncremento.setText(String.valueOf(incremento));              //ESCRIBE EL VALOR DE INCREMENTO A PAGAR EN INCREMENTO
        } catch (NumberFormatException ex) {                                   //CONTROL PARA QUE AL CALCULAR EL TOTAL TENGA UN NUMERO PARA CALCULAR
            JOptionPane.showMessageDialog(this, "SELECCIONA UN CURSO PARA PODER HACER EL CALCULO.");
        }

    }

    private void calculoImporte() {                                          //38º METODO CALCULO IMPORTE
        float total = 0;                                                      //39º DECLARA EL TOTAL = 0
        for (int i = 0; i < modelo4.size(); i++) {                                //40º FOR PARA RECORRER  EL MODELO4
            total = total + (float) modelo4.get(i);                           //41º TOTAL = TOTAL + CASTING A FLOAT DEL STRING MODELO4 
        }
        txtTotal.setText(String.valueOf(total));                            //42º IMPRIME EN EL txtTotal EL VALOR CALCULADO DE TOTAL.
    }

    private void btnCerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCerrarActionPerformed
        dispose();                                                          //PARA SALIR DE LA VENTANA
        System.exit(0);
    }//GEN-LAST:event_btnCerrarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Ventana().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnCalcular;
    private javax.swing.JButton btnCerrar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JComboBox cmbCategoria;
    private javax.swing.JComboBox cmbMedioPago;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JList lstCursosOfertados;
    private javax.swing.JList lstCursosSeleccionados;
    private javax.swing.JList lstPreciosOfertados;
    private javax.swing.JList lstPreciosSeleccionados;
    private javax.swing.JTextField txtAlumno;
    private javax.swing.JTextField txtDescuento;
    private javax.swing.JTextField txtIncremento;
    private javax.swing.JTextField txtTotal;
    private javax.swing.JTextField txtTotalPagar;
    // End of variables declaration//GEN-END:variables
}
