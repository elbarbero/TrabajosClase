/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vistas;

import controlador.Conexion;
import controlador.GestorEnfermos;
import controlador.GestorMedicacion;
import controlador.GestorMedicacionEnfermo;
import java.util.ArrayList;
import java.util.Vector;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import modelo.Enfermo;
import modelo.Medicaciones;
import modelo.miModelo;

/**
 *
 * @author Mario
 */
public class PnConsultarMedicacionEnfermero extends javax.swing.JPanel {

    DefaultComboBoxModel modeloEnfermo;
    DefaultTableModel modeloTabla;
    Conexion bd;
    GestorMedicacion tabla;

    /**
     * Creates new form PnConsulta
     */
    public PnConsultarMedicacionEnfermero() {
        initComponents();
        bd = new Conexion();
        int resultado = bd.establecer("jdbc:mysql://localhost:3306/examen8615");// lo último es el nombre de la base de datos
        String[] titulos = {"Código Identificacion", "Denominacion", "Indicaciones"};
        modeloTabla =new DefaultTableModel();
        modeloTabla.setColumnIdentifiers(titulos);
        tblMedicacion.setModel(modeloTabla);
        modeloEnfermo = new DefaultComboBoxModel();
        cmbEnfermo.setModel(modeloEnfermo);
        if (resultado != 0) {
            JOptionPane.showMessageDialog(this, "CONEXIÓN INCORRECTA");
            System.exit(0);
        }
        tabla = new GestorMedicacion(bd);
        cargarEnfermos();
        //cargarMedicamentos();
           bd.cerrar();
    }

    private void cargarEnfermos() {
        GestorEnfermos e = new GestorEnfermos(bd);
        ArrayList<Enfermo> enfermos;
        enfermos = e.consultaTodosEnfermos();
        for (int i = 0; i < enfermos.size(); i++) {
            modeloEnfermo.addElement(enfermos.get(i));
        }
    }

    /*private void cargarMedicamentos() {
        ArrayList<Medicaciones> miMedicacion;
        miMedicacion = tabla.consultaTodasMedicaciones();
        for (int i = 0; i < miMedicacion.size(); i++) {
            Vector v = new Vector();
            v.add(miMedicacion.get(i).getCodMedicacion());
            v.add(miMedicacion.get(i).getDenominacion());
            v.add(miMedicacion.get(i).getIndicaciones());
            modeloTabla.addRow(v);
        }
    }*/
    private void borrarModelo() {
        int nFilas = tblMedicacion.getRowCount();
        for (int i = 0; i < nFilas; i++) {
            modeloTabla.removeRow(0);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblMedicacion = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        cmbEnfermo = new javax.swing.JComboBox<>();

        jLabel1.setText("jLabel1");

        tblMedicacion.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblMedicacion);

        jLabel2.setText("ENFERMOS");

        cmbEnfermo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbEnfermoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(15, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(65, 65, 65)
                        .addComponent(jLabel2)
                        .addGap(59, 59, 59)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(cmbEnfermo, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cmbEnfermo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(64, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void cmbEnfermoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbEnfermoActionPerformed
        if (cmbEnfermo.getSelectedIndex() != -1) {
            /*si es "-1" quiere decir que el cmbEnfermo está vacio y,
             si es distinto es que hay aunque sea un solo elemento(un cliente)*/
            //borrarModelo();
            Enfermo e = (Enfermo) modeloEnfermo.getElementAt(cmbEnfermo.getSelectedIndex());
            ArrayList<Medicaciones> miMedicacion;
            GestorMedicacionEnfermo gMedicacionEnfermo = new GestorMedicacionEnfermo(bd);
            gMedicacionEnfermo.consultaTodasEnfermosMedicaciones();
           miMedicacion = tabla.consultaTodasMedicaciones();
            /*ArrayList<Medicaciones> miMedicacion = e.getNumSegSocial();*/

            for (int i = 0; i < miMedicacion.size(); i++) {
                Vector v = new Vector();
                v.add(miMedicacion.get(i).getCodMedicacion());
                v.add(miMedicacion.get(i).getDenominacion());
                v.add(miMedicacion.get(i).getIndicaciones());
                modeloTabla.addRow(v);
            }
        }
    }//GEN-LAST:event_cmbEnfermoActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cmbEnfermo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblMedicacion;
    // End of variables declaration//GEN-END:variables
}
